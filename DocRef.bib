% This file was created with JabRef 2.5.
% Encoding: UTF-8

@INPROCEEDINGS{Mery2013,
  author = {M{\'e}ry, Dominique and Rosemary, Monahan},
  title = {{Transforming EVENT B Models into Verified C\# Implementations}},
  booktitle = {{VPT 2013 - First International Workshop on Verification and Program
	Transformation}},
  year = {2013},
  editor = {Alexei Lisitsa and Andrei Nemytykh },
  volume = {16},
  series = {EPIC },
  pages = {57-73},
  address = {Saint Petersburg, Russia},
  month = Jul,
  organization = {Alexei Lisitsa and Andrei Nemytykh},
  abstract = {{The refinement-based approach to developing software is based on
	the correct-by-construction paradigm where software systems are constructed
	via the step-by-step refinement of an initial high- level specification
	into a final concrete specification. Proof obligations, generated
	during this process are discharged to ensure the consistency between
	refinement levels and hence the system's overall correctness. Here,
	we are concerned with the refinement of specifications using the
	EVENT B modelling lan- guage and its associated toolset, the RODIN
	platform. In particular, we focus on the final steps of the process
	where the final concrete specification is transformed into an executable
	algorithm. The transformations involved are (a) the transformation
	from an EVENT B specification into a concrete recursive algorithm
	and (b) the transformation from the recursive algorithm into its
	equivalent itera- tive version. We prove both transformations correct
	and verify the correctness of the final code in a static program
	verification environment for C\# programs, namely the Spec\# programming
	system.}},
  affiliation = {MOSEL - LORIA , Computer Science Department [Maynooth]},
  audience = {internationale },
  collaboration = {Project PHC France Ireland 29863WG : Building Reliable Systems: Software
	Refinement meets Software Verification. },
  hal_id = {hal-00862050},
  keywords = {refinement, transformation, algorithm, implementation, correct-by-construction,
	verification},
  language = {Anglais}
}

